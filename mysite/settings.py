"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '#l7jm_#d^taj!6%zhn7aclvih2f&=m14t%o!^d#60khbvm2rn+'

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = False 会导致静态文件 404
DEBUG = False

# ALLOWED_HOSTS 是允许访问的域名列表，127.0.0.1 和 localhost 是本地访问的域名，.lijianqianga.com 是访问服务器的域名。
# 域名前加一个点表示允许访问该域名下的子域名，
# 比如 www.lijianqianga.com 等二级域名同样允许访问。如果不加前面的点则只允许访问 lijianqianga.com。
ALLOWED_HOSTS = ['127.0.0.1', 'localhost ', '47.106.117.116','.lijianqianga.com']


# Application definition

INSTALLED_APPS = [
    'myblog',
    'comment',
    'ckeditor',
    'ckeditor_uploader',
    'django.contrib.admin',
    'django.contrib.auth',
    # auth 模块的用户权限处理部分依赖的应用
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

CKEDITOR_CONFIGS = {
    # settings name 用于实例化编辑器的时候引用,配置名是default时，django-ckeditor默认使用这个配置
    'default': {
        # 编辑器的宽高请根据页面自行设置
        'width':'1300px',
        'height':'350px',
        'tabSpaces': 4,
        'toolbar': 'Custom',
        # 添加按钮在这里
        'toolbar_Custom':
        [
            ['Font','FontSize'],
            ['Styles','Format','Bold', 'Italic', 'Underline','Strike','RemoveFormat','TextColor','BGColor'],
            ['JustifyLeft','JustifyCenter','JustifyRight','JustifyBlock'],
            ['NumberedList', 'BulletedList'],
            ['Blockquote', 'CodeSnippet'],
            ['Smiley','SpecialChar','Image', 'Flash','Link', 'Unlink'],
            ['Redo','Undo','Table','HorizontalRule'],
            # ['Indent','Outdent'], 增加缩进量/减少缩进量
            ['Maximize'],
            ['Source'],
            # ['Anchor'] 锚点
        ],
        # 插件
        # 'uploadimage'，这个插件的作用是允许用户直接在编辑器里粘贴（ctrl + v）图片
        # 添加的插件如果在在工具条(toolbar)还有按钮则在toolbar对应的value里添加名字（首字母大写）[例如codesnippet]
        'extraPlugins': ','.join(['codesnippet','uploadimage','widget','lineutils',]),
    }
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    # SessionMiddleware 用户处理用户会话
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    # AuthenticationMiddleware 绑定一个 User 对象到请求中
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mysite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # 自定义 templates 查找路径，其中 BASE_DIR 是django创建工程的那个工程文件的路径
        'DIRS': [],
        # APP_DIRS 应该就是允许查找注册的 APP 下的 TEMPLATES，对于 myblog 应用来说，就可以查找 myblog 下的 remplates
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # 如果在模板中使用{{MEDIA_URL}} 渲染出 MEDIA_URL 的值，需要在 context_processors 选项中添加
                'django.template.context_processors.media'
            ],
        },
    },
]

WSGI_APPLICATION = 'mysite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        # 使用 mysql 数据库
        'ENGINE': 'django.db.backends.mysql',
        # 'ENGINE':None,
        'NAME': 'myblogdatabase',
        'USER': 'root',
        'PASSWORD': '123456',
        'HOST': '127.0.0.1',
        'PORT': '3306'
    }
}

# from mongoengine import connect
# connect('blog')

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

# STATICFILES_DIRS告诉django,首先到STATICFILES_DIRS里面寻找静态文件,其次再到各个app的static文件夹里面找(
# STATICFILES_DIRS = (
# os.path.join(BASE_DIR, 'common_static'),
# )

STATIC_URL = '/static/'
# STATIC_ROOT 指明了静态文件的收集目录，即项目根目录（BASE_DIR）下的 static 文件夹，要写成绝对地址
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

MEDIA_URL = '/media/' # media即为图片上传的根路径
# 添加图片的查找路径，也就是在 project 目录下的 media 目录
MEDIA_ROOT = os.path.join(BASE_DIR,'media').replace("\\","/")

# 注意：如果写成 /ck_upload/ 会出现 url 错误
CKEDITOR_UPLOAD_PATH = 'ck_upload/'
